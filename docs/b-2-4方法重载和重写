## [重载](https://hollischuang.github.io/toBeTopJavaer/#/basics/object-oriented/overloading-vs-overriding?id=%e9%87%8d%e8%bd%bd)

简单说，就是函数或者方法有同样的名称，但是参数列表不相同的情形，这样的同名不同参数的函数或者方法之间，互相称之为重载函数或者方法。

## 重写

重写指的是在Java的子类与父类中有两个名称、参数列表都相同的方法的情况。由于他们具有相同的方法签名，所以子类中的新方法将覆盖父类中原有的方法。

![](https://tcs-ga.teambition.net/storage/111x7e99a99fc3e47571e03744aa02a98555?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYwMjIzOTg0MywiaWF0IjoxNjAxNjM1MDQzLCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMXg3ZTk5YTk5ZmMzZTQ3NTcxZTAzNzQ0YWEwMmE5ODU1NSJ9.ccBG07lQcjc2oaelCgRtC3mBquF3XKQrG_evMt7t8rY&download=image.png "")



## 重写与重载的区别

1、重载是一个编译期概念、重写是一个运行期间概念。

2、重载遵循所谓“编译期绑定”，即在编译时根据参数变量的类型判断应该调用哪个方法。

3、重写遵循所谓“运行期绑定”，即在运行的时候，根据引用变量所指向的实际对象的类型来调用方法

4、因为在编译期已经确定调用哪个方法，所以重载并不是多态。而重写是多态。重载只是一种语言特性，是一种语法规则，与多态无关，与面向对象也无关。（注：严格来说，重载是编译时多态，即静态多态。但是，Java中提到的多态，在不特别说明的情况下都指动态多态）

