Java中共有三种变量，分别是**类变量、成员变量和局部变量**。他们分别存放在**JVM的方法区、堆内存和栈内存中。**

```java
    /**
     * @author Hollis
     */
    public class Variables {

        /**
         * 类变量
         */
        private static int a;

        /**
         * 成员变量
         */
        private int b;

        /**
         * 局部变量
         * @param c
         */
        public void test(int c){
            int d;
        }
    }



```

上面定义的三个变量中，变量a就是类变量，变量b就是成员变量，而变量c和d是局部变量。



### **成员变量和静态变量（类变量）的区别：**

1、定义

成员变量所属于对象。所以也称为实例变量。

静态变量所属于类。所以也称为类变量。

2、存储位置

成员变量存在于堆内存中。

静态变量存在于方法区中。

3、存活周期

成员变量随着**对象创建**而存在。随着对象被回收而消失。

静态变量随着**类的加载**而存在。随着类的消失而消失。

4、调用对象

成员变量只能被对象所调用 。

静态变量可以被对象调用，也可以被类名调用。

所以，成员变量可以称为对象的特有数据，静态变量称为对象的共享数据。



### **类变量、成员变量和局部变量的区别：**

**静态变量：线程非安全。**

静态变量即类变量，位于方法区，为所有对象共享，共享一份内存，一旦静态变量被修改，其他对象均对修改可见，故线程非安全。

 

**实例变量：单例模式（只有一个对象实例存在）线程非安全，非单例线程安全。**

实例变量为对象实例私有，在虚拟机的堆中分配，

若在系统中**只存在一个此对象**的实例，在**多线程环境下**，“犹如”静态变量那样，被某个线程修改后，其**他线程对修改均可见，故线程非安全**；

如果**每个线程执行都是在不同的对象中**，那对象与对象之间的实例变量的修改将互不影响，故线程安全。

**局部变量：线程安全。**

每个线程执行时将会把**局部变量放在各自栈帧的工作内存**中，线程间不共享，故不存在线程安全问题。







